diff --git a/crates/gitbutler-git/src/executor/tokio/mod.rs b/crates/gitbutler-git/src/executor/tokio/mod.rs
index d225f1de5..a112290d2 100644
--- a/crates/gitbutler-git/src/executor/tokio/mod.rs
+++ b/crates/gitbutler-git/src/executor/tokio/mod.rs
@@ -29,8 +29,17 @@ unsafe impl super::GitExecutor for TokioExecutor {
         cwd: P,
         envs: Option<HashMap<String, String>>,
     ) -> Result<(usize, String, String), Self::Error> {
-        let git_exe = gix_path::env::exe_invocation();
-        let mut cmd = Command::new(git_exe);
+        // Check if we're running in a flatpak
+        let flatpak = std::env::var("FLATPAK_ID").unwrap_or_else(|_| String::new());
+
+        let mut cmd = if !flatpak.is_empty() {
+            let mut cmd = Command::new("host-spawn");
+            cmd.args(["git"]);
+            cmd
+        } else {
+            let git_exe = gix_path::env::exe_invocation();
+            Command::new(git_exe)
+        };

         // Output the command being executed to stderr, for debugging purposes
         // (only on test configs).
@@ -47,7 +56,7 @@ unsafe impl super::GitExecutor for TokioExecutor {
                 .map(|s| format!("{s:?}"))
                 .collect::<Vec<_>>()
                 .join(" ");
-            eprintln!("env {envs_str} {git_exe:?} {args_str}");
+            eprintln!("env {envs_str} {args_str}");
         }

         cmd.kill_on_drop(true);
@@ -88,6 +97,7 @@ unsafe impl super::GitExecutor for TokioExecutor {
             }
         }

+        println!("Cmd: {:?}", cmd);
         let output = cmd.output().await?;

         #[cfg(any(test, debug_assertions))]
